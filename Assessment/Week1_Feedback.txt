Starting weekly assessment for Sam, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 26.80 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week6, Week1, Week7, MP, Assessment, HPC, Week5, Week2, Week4, .git, Week3

Found the following files in parent directory: .gitignore, README.md

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*.tmp
*.DS_store
*.pyc
__pycache__
*.RHistory
.idea
.vscode
Rplots.pdf
.log
*.log**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:
**********************************************************************
# **2019-20 CMEE Coursework Repository**
## About
Author: Sam Turner

Repository for my CMEE coursework. The directory for each Week contains four subdirectories: **code**, **data**, **results** (empty, populated when scripts from code are run), and **sandbox** (code and data used in development).

Dependencies for each Week are specified in the README in the Week's subdirectory.

## Contents
### [Week 1](https://github.com/SamT123/CMEECoursework/tree/master/Week1)
* UNIX
* Shell scripting
* LaTex

### [Week 2](https://github.com/SamT123/CMEECoursework/tree/master/Week2)
* Python I

### [Week 3](https://github.com/SamT123/CMEECoursework/tree/master/Week3)
* R

### [Week 4](https://github.com/SamT123/CMEECoursework/tree/master/Week4)
* Stats

### [Week 5](https://github.com/SamT123/CMEECoursework/tree/master/Week5)
* Stats
* GIS

### [Week 6](https://github.com/SamT123/CMEECoursework/tree/master/Week6)
* Genomics and Bioinformatics

### [Week 7](https://github.com/SamT123/CMEECoursework/tree/master/Week7)
* Python II

## Prerequisites
### Python 3.x
`pickle`	`stringdist`
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 7 weekly directories: Week1, Week2, Week3, Week4, Week5, Week6, Week7

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Code, Data, Sandbox, Results

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:
**********************************************************************
# Week 1
Coursework for CMEE week 1.
## Topics:
* UNIX
* Shell scripting
* LaTex
* Git
## Contents
### [Code](https://github.com/SamT123/CMEECoursework/tree/master/Week2/Code)
**UnixPrac1.txt**
- text file containing solution to Unix scripting practical

**boilerplate.sh**	
- `I am a boilerplate. I like to boil plates. Give me a plate. - Oenone Scott 2019`
- Boilerplate script demonstrating essential features of a shell script

**tabtocsv.sh**
- Converts tab separated file to comma separated file
- Example usage:
`bash tabtocsv.sh ../SandBox/test.txt`

**variables.sh**
- Demonstate variable assignment

**MyExampleScript.sh**
- Demonstrate environment variables

**CountLines.sh**
- Count the lines in a file passed as an argument
- Example usage:
`bash CountLines.sh testfile.txt`

**ConcatenateTwoFiles.sh**
- Append the content of file 2 to the end of file 1, saving as file 3
- Example usage:
`bash ConcatenateTwoFiles.sh ../Sandbox/file1.txt ../Sandbox/file2.txt ../Results/Concat.txt`

**tiff2png.sh**
- Convert file.tif  to file.jpeg file, saving output at ../Results/file.jpg
- Example usage:
`bash tif2jpg.sh ../Data/GMARBLES.tif`

**csvtospace.sh**
- Convert comma separated file to space separated file
- Example usage:
`bash csvtospace.sh ../Data/Temperatures/1801.csv`

**CompileLaTeX.sh**
- Compile a pdf from name.tex and referenced .bib file, which must be in same directory. Saves compiled pdf to specified directory.
- Example usage:
`bash CompileLaTeX.sh FirstExample ../Results/`

**FirstExample.tex**
- Example LaTeX document

**FirstBiblio.bib**
- Example LaTeX bibliography

## [Data](https://github.com/SamT123/CMEECoursework/tree/master/Week2/Data)

**GMARBLES.tif**

**Temperatures/**
- csv files to convert to space delimited value files

**fasta/**
- fasta files for UnixPrac1.txt

## [Results](https://github.com/SamT123/CMEECoursework/tree/master/Week2/Results)
**********************************************************************

Found following files in results directory: .txt, .csv, README.md, GMARBLES.jpg...
ideally, Results directory should be empty other than, perhaps, a readme. 

Found 12 code files: ConcatenateTwoFiles.sh, CountLines.sh, variables.sh, CompileLaTeX.sh, tiff2png.sh, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, boilerplate.sh

Found the following extra files: input
0.5 pt deducted per extra file

Current Points = 99.5

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Sam Turner sat19@ic.ac.uk
# Script: ConcatenateTwoFiles.sh
# Desc: Concatentate two files and save to specified path
# Arguments: 1 -> input .txt file to be placed at top of output file
#            2 -> input .txt file to be places at bottom of output file
#            3 -> output file path (recommended ../Results/<filename>.txt
# Date: Oct 2019

if [ -z "$1"] || [ -z "$2"] ||  [-z "$3"] 
then
    echo "Error. 3 arguments required: 2 input files to concatenate, and 1 output file path"
    exit
fi

# copy first input file to output file
cat $1 > $3
# copy second input file to output
cat $2 >> $3

echo "Merged File is"
cat $3
**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Error. 3 arguments required: 2 input files to concatenate, and 1 output file path

**********************************************************************

Code ran without errors

Time consumed = 0.00333s

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Sam Turner sat19@ic.ac.uk
# Script: CountLines.sh
# Desc: count the number of lines in the file specified in the argument
# Arguments: 1 -> text file
# Date: Oct 2018

if [ -z "$1" ]
then
    echo "Error. Require path to file for line counting."
    exit
fi

NumLines=`wc -l < $1`
echo "The file $1 has $NumLines lines"
echo
**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
Error. Require path to file for line counting.

**********************************************************************

Code ran without errors

Time consumed = 0.00451s

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Sam Turner sat19@ic.ac.uk
# Script: variables.sh
# Desc: demonstrate use of variables
# Arguments: none
# Date: Oct 2018

# Demonstrating variable assignment
MyVar='some string'
echo 'the current value of the variable is' $MyVar
echo 'Please enter a new string'

read MyVar
echo 'the current value of the variable is' $MyVar

# Reading multiple values
echo 'Enter 2 values separated by a space'
read a b 


# check if two values were entered - echo error message if not.
if [ -z "$b" ]
then
    echo 'Error: you must enter 2 integer values'
else
    echo 'you entered' $a 'and' $b '. Their sum is:'

    mysum=`expr $a + $b`
    echo $mysum
fi**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
Please enter a new string
the current value of the variable is
Enter 2 values separated by a space
Error: you must enter 2 integer values

**********************************************************************

Code ran without errors

Time consumed = 0.00393s

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#!/bin/bash

# Author:  Sam Turner sat19@ic.ac.uk
# Script:  CompileLaTeX.sh
# Desc:    Compiles a pdf from [name].tex and referenced .bib file, which must
#          be in same directory. [name].pdf is saved in specified directory, and opened
# Arguments: 1 -> filename for .tex file without extension eg. FirstExample
#            2 -> directory to save to
# Date: Oct 2019

if [ -z "$1" ] | [ -z "$2" ]
then
    echo "Error: require path to .tex file."
    exit
fi

# Compile LaTeX document
pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex



# Move document to specified location
mv $1.pdf $2$1.pdf 

# Open document
open $2$1.pdf

# Remove extra files created by pdflatex
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
rm *.bbl
rm *.blg
**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
Error: require path to .tex file.

**********************************************************************

Code ran without errors

Time consumed = 0.00443s

======================================================================
Inspecting script file tiff2png.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Sam Turner sat19@ic.ac.uk
# Script: tiff2png.sh
# Desc: Convert all .tif files in ../Data/ to .png files, which are saved at ../Results/<input_name>.png
# Arguments: none
# Date: Oct 2019


# loop over all *.tif files in ../Data
for f in ../Data/*.tif;
    do
        # Do conversion and save as .jpg
        echo "Converting $f";
        convert "$f" "../Results/$(basename "$f" .tif).jpg";
    done
**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 

**********************************************************************
Converting ../Data/GMARBLES.tif

**********************************************************************

Code ran without errors

Time consumed = 0.05101s

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Sam Turner sat19@ic.ac.uk
# Script: csvtospace.sh
# Desc: substitute commas in specified file with spaces, saved at ../Results <filename>.txt
# Arguments: 1-> comma delimited file
# Date: Oct 2018

if [ -z "$1" ]
then
    echo "Error. Path to .csv file required."
    exit
fi

echo "Creating a space delimited version of $1 ..."

# cat reads file -> tr replaces ',' with ' ' -> basename and cut used to generate new file name
cat $1 | tr -s "," " " >> ../Results/$(basename $1 | cut -f 1 -d '.').txt
echo "Done!"
exit
**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
Error. Path to .csv file required.

**********************************************************************

Code ran without errors

Time consumed = 0.00304s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
\documentclass[12pt]{article}
\title{A Simple Document}
\author{Sam Turner}
\date{}
\begin{document}
    \maketitle

    \begin{abstract}
        This paper must be cool!

    \end{abstract}


    \section{Introduction}
        Blah Blah!

    \section{Materials and Methods}
    One of the most famous equation is:
    \begin{equation}
     E = mc^2
    \end{equation}
    This equation was first proposed by einstein in 1905
    \cite{einstein1905does}.

    \bibliographystyle{plain}
    \bibliography{FirstBiblio}
\end{document}
**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Sam Turner sat19@ic.ac.uk
# Script: MyExampleScript.sh
# Desc: Demonstrate environment variables
# Arguments: none
# Date: Oct 2018

msg1='Hello'
# $USER is an environment variable which evaluates to the user's system username
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo
**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00345s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content?},
  author={Einstein, A.},
  journal={Annalen der Physik},
  volume={18},
  pages={639--641},
  year={1905}
}

**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
#1
# Count how many lines are in each file
# executes wc -l on all files in ../Data with extension .fasta
find ../Data/fasta -type f -name *.fasta -exec wc -l {} \; 

#2
# Print everything starting from the second line for the E. coli genome
# prints from line 2 onwards
tail +2 ../Data/fasta/E.coli.fasta 

#3
# Count the sequence length of this genome
# sequence (line 2 onwards) -> remove newline characters -> count characters
tail +2 ../Data/fasta/E.coli.fasta | tr -d '\n' | wc -c #3

#4
# Count the matches of a particular sequence, "ATGC" in the genome of E. coli
# sequence (line 2 onwards) -> remove newline characters -> count characters -> grep specified sequence -> count lines
tail +2 ../Data/fasta/E.coli.fasta | tr -d '\n' | grep -i -o 'ATGC' | wc -l #4

#5
# Compute the AT/GC ratio
# AT number & GC number calculation: sequence (line 2 onwards) -> remove newline characters -> count characters -> grep specified sequence -> count lines
# produce decimal: echo AT number / GC number -> bc -l 
echo $(tail +2 ../Data/fasta/E.coli.fasta | tr -d '\n' | grep -i -o '[A,T]' | wc -l) / $(tail +2 ../Data/fasta/E.coli.fasta | tr -d '\n' | grep -i -o '[G,C]' |  wc -l) | bc -l #5**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Sam Turner sat19@ic.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas
# Saves the output into a .csv file in ../Results/
# Arguments: 1 -> tab delimited file
# Date: Oct 2019

if [ -z "$1" ]
then
    echo "Error. Path to tab separated file required."
    exit
fi

echo "Creating a comma delimited version of $1 ..."

# cat reads file -> tr replaces '\t' with ',' -> basename used to generate new file name
cat $1 | tr -s "\t" "," > ../Results/$(basename $1).csv
echo "Done!"
exit
**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
Error. Path to tab separated file required.

**********************************************************************

Code ran without errors

Time consumed = 0.00334s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Sam Turner sat19@ic.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2018

echo -e '\nThis is a shell script! \n' 

# exit
**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00251s

======================================================================
======================================================================
Finished running scripts

Ran into 0 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 99.5

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!